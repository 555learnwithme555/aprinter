commit 16f351ed1c1cc7564d3fa7fb1085a3320dbf01c1
Author: Ambroz Bizjak <ambrop7@gmail.com>
Date:   Sun Nov 8 11:28:32 2015 +0100

    emac: Implement write functions allowing the user to memcpy.

diff --git a/sam/drivers/emac/emac.c b/sam/drivers/emac/emac.c
index 7d95817..e29496a 100644
--- a/sam/drivers/emac/emac.c
+++ b/sam/drivers/emac/emac.c
@@ -510,12 +510,22 @@ uint32_t emac_dev_read(emac_device_t* p_emac_dev, uint8_t* p_frame,
 uint32_t emac_dev_write(emac_device_t* p_emac_dev, void *p_buffer,
 		uint32_t ul_size, emac_dev_tx_cb_t func_tx_cb)
 {
+	void *dev_buffer;
+	uint32_t res = emac_dev_write_start(p_emac_dev, ul_size, &dev_buffer);
+	if (res != EMAC_OK) {
+		return res;
+	}
+	
+	if (p_buffer && ul_size) {
+		memcpy(dev_buffer, p_buffer, ul_size);
+	}
+	
+	return emac_dev_write_end(p_emac_dev, ul_size, func_tx_cb);
+}
 
+uint32_t emac_dev_write_start(emac_device_t* p_emac_dev, uint32_t ul_size, void **out_buffer)
+{
 	volatile emac_tx_descriptor_t *p_tx_td;
-	volatile emac_dev_tx_cb_t *p_func_tx_cb;
-
-	Emac *p_hw = p_emac_dev->p_hw;
-
 
 	/* Check parameter */
 	if (ul_size > EMAC_TX_UNITSIZE) {
@@ -531,15 +541,23 @@ uint32_t emac_dev_write(emac_device_t* p_emac_dev, void *p_buffer,
 		return EMAC_TX_BUSY;
 	}
 
-	/* Pointers to the current Tx callback */
-	p_func_tx_cb = &p_emac_dev->func_tx_cb_list[p_emac_dev->us_tx_head];
+	*out_buffer = (void *)p_tx_td->addr;
+	
+	return EMAC_OK;
+}
 
-	/* Set up/copy data to transmission buffer */
-	if (p_buffer && ul_size) {
-		/* Driver manages the ring buffer */
-		memcpy((void *)p_tx_td->addr, p_buffer, ul_size);
-	}
+uint32_t emac_dev_write_end(emac_device_t* p_emac_dev, uint32_t ul_size, emac_dev_tx_cb_t func_tx_cb)
+{
+	volatile emac_tx_descriptor_t *p_tx_td;
+	volatile emac_dev_tx_cb_t *p_func_tx_cb;
+	Emac *p_hw = p_emac_dev->p_hw;
+	
+	/* Pointers to the current transmit descriptor */
+	p_tx_td = &p_emac_dev->p_tx_dscr[p_emac_dev->us_tx_head];
 
+	/* Pointers to the current Tx callback */
+	p_func_tx_cb = &p_emac_dev->func_tx_cb_list[p_emac_dev->us_tx_head];
+	
 	/* Tx callback */
 	*p_func_tx_cb = func_tx_cb;
 
@@ -560,7 +578,7 @@ uint32_t emac_dev_write(emac_device_t* p_emac_dev, void *p_buffer,
 
 	/* Now start to transmit if it is still not done */
 	emac_start_transmission(p_hw);
-
+	
 	return EMAC_OK;
 }
 
diff --git a/sam/drivers/emac/emac.h b/sam/drivers/emac/emac.h
index 784c96b..e50cf5c 100644
--- a/sam/drivers/emac/emac.h
+++ b/sam/drivers/emac/emac.h
@@ -1007,6 +1007,8 @@ uint32_t emac_dev_read(emac_device_t* p_emac_dev, uint8_t* p_frame,
 		uint32_t ul_frame_size, uint32_t* p_rcv_size);
 uint32_t emac_dev_write(emac_device_t* p_emac_dev, void *p_buffer,
 		uint32_t ul_size, emac_dev_tx_cb_t func_tx_cb);
+uint32_t emac_dev_write_start(emac_device_t* p_emac_dev, uint32_t ul_size, void **out_buffer);
+uint32_t emac_dev_write_end(emac_device_t* p_emac_dev, uint32_t ul_size, emac_dev_tx_cb_t func_tx_cb);
 uint32_t emac_dev_get_tx_load(emac_device_t* p_emac_dev);
 void emac_dev_set_rx_callback(emac_device_t* p_emac_dev,
 		emac_dev_tx_cb_t func_rx_cb);
