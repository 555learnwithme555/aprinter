diff --git a/sam/drivers/emac/emac.c b/sam/drivers/emac/emac.c
index 37ee4e2..5e5cc54 100644
--- a/sam/drivers/emac/emac.c
+++ b/sam/drivers/emac/emac.c
@@ -424,16 +424,17 @@ uint32_t emac_dev_read_start(emac_device_t* p_emac_dev, emac_dev_read_state_t *s
 			if ((p_rx_td->status.val & EMAC_RXD_EOF) == EMAC_RXD_EOF) {
 				/* Frame size from the EMAC */
 				uint32_t rcv_size = (p_rx_td->status.val & EMAC_RXD_LEN_MASK);
+                                uint32_t rcv_offset = (p_emac_dev->p_hw->EMAC_NCFGR & EMAC_NCFGR_RBOF_Msk) >> EMAC_NCFGR_RBOF_Pos;
 				
 				/* Figure out how the frame wraps */
 				uint16_t num_first_buffers = (us_tmp_idx >= p_emac_dev->us_rx_idx) ?
 					(us_tmp_idx - p_emac_dev->us_rx_idx) : (p_emac_dev->us_rx_list_size - p_emac_dev->us_rx_idx);
-				uint32_t first_buffers_size = (uint32_t)num_first_buffers * EMAC_RX_UNITSIZE;
+				uint32_t first_buffers_size = (uint32_t)num_first_buffers * EMAC_RX_UNITSIZE - rcv_offset;
 				
 				/* Provide data pointers to application */
-				*p_data1 = (void *)(p_emac_dev->p_rx_dscr[p_emac_dev->us_rx_idx].addr.val & EMAC_RXD_ADDR_MASK);
-				*p_data2 = (void *)(p_emac_dev->p_rx_dscr[0                    ].addr.val & EMAC_RXD_ADDR_MASK);
-				
+				*p_data1 = &p_emac_dev->p_rx_buffer[p_emac_dev->us_rx_idx * EMAC_RX_UNITSIZE] + rcv_offset;
+				*p_data2 = &p_emac_dev->p_rx_buffer[0                     * EMAC_RX_UNITSIZE];
+                                
 				/* Provide data sizes to application */
 				*p_size1 = (rcv_size <= first_buffers_size) ? rcv_size : first_buffers_size;
 				*p_size2 = rcv_size - *p_size1;
