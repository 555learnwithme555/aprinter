include "http_server.ncdi"

process main {
    log_fr(@notice, {"Init"}, {"Exit"});
    
    # Define the parameters for the HTTP server.
    var([
        "listen_addr": {@ipv4, "127.0.0.1", "4000"},
        "max_clients": "128",
        "max_headers": "64",
        "max_line_len": "512",
        "max_request_payload_len": "262144",
        "supported_methods": ["GET": "", "POST": ""],
        "server_name": "APrinter Compilation Service implemented in NCD"
    ]) options;
    
    # Define the HTTP request handler.
    Block {
        alias(@_arg0) method;
        alias(@_arg1) path;
        alias(@_arg2) headers;
        alias(@_arg3) request_payload;
        objref_arg(_arg4) callbacks;
        objref_arg(_arg5) responses;
        
        # A little bit of hacking to handle errors without nesting.
        var(@true) cont;
        backtrack_point() abort;
        If (cont) {
            cont->set(@false);
            
            # Provide some warm and fuzzy text at /.
            If (@val_equal(path, "/")) {
                If (@not(@val_equal(method, "GET"))) {
                    responses.method_not_allowed->call();
                    abort->go();
                };
                
                value("") text;
                text->append("Hello curious user! You have reached the APrinter Compilation Service Backend.\n\n");
                text->append("Unfortunately there is nothing here to see.\n\n");
                text->append("Unless you are interested in hot new programming languages.\n");
                text->append("In that case you really should take a look at the source code of this software, ");
                text->append("which is written in the NCD Programming Language :)");
                
                callbacks.add_payload->call(text);
                abort->go();
            };
            
            # Unsupported request path?
            If (@not(@val_equal(path, "/compile"))) {
                responses.not_found->call();
                abort->go();
            };
            
            # If this is a GET request, provide some warm and fuzzy text.
            If (@not(@val_equal(method, "POST"))) {
                responses.method_not_allowed->call();
                abort->go();
            };
            
            callbacks.add_payload->call(@concat("You sent me the following data: ", request_payload));
        };
    } request_handler;
    
    # Start the HTTP server.
    call(@http_server, {options, ^request_handler});
}
