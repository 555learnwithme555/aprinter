/*
 * Copyright (c) 2014 Ambroz Bizjak
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef AMBROLIB_CONSTEXPR_CRC32_H
#define AMBROLIB_CONSTEXPR_CRC32_H

#include <stdint.h>
#include <stddef.h>

#include <aprinter/BeginNamespace.h>

static constexpr uint32_t ConstexprCrc32__Table[256] = {
    UINT32_C(0x00000000L), UINT32_C(0x77073096L), UINT32_C(0xee0e612cL), UINT32_C(0x990951baL), UINT32_C(0x076dc419L),
    UINT32_C(0x706af48fL), UINT32_C(0xe963a535L), UINT32_C(0x9e6495a3L), UINT32_C(0x0edb8832L), UINT32_C(0x79dcb8a4L),
    UINT32_C(0xe0d5e91eL), UINT32_C(0x97d2d988L), UINT32_C(0x09b64c2bL), UINT32_C(0x7eb17cbdL), UINT32_C(0xe7b82d07L),
    UINT32_C(0x90bf1d91L), UINT32_C(0x1db71064L), UINT32_C(0x6ab020f2L), UINT32_C(0xf3b97148L), UINT32_C(0x84be41deL),
    UINT32_C(0x1adad47dL), UINT32_C(0x6ddde4ebL), UINT32_C(0xf4d4b551L), UINT32_C(0x83d385c7L), UINT32_C(0x136c9856L),
    UINT32_C(0x646ba8c0L), UINT32_C(0xfd62f97aL), UINT32_C(0x8a65c9ecL), UINT32_C(0x14015c4fL), UINT32_C(0x63066cd9L),
    UINT32_C(0xfa0f3d63L), UINT32_C(0x8d080df5L), UINT32_C(0x3b6e20c8L), UINT32_C(0x4c69105eL), UINT32_C(0xd56041e4L),
    UINT32_C(0xa2677172L), UINT32_C(0x3c03e4d1L), UINT32_C(0x4b04d447L), UINT32_C(0xd20d85fdL), UINT32_C(0xa50ab56bL),
    UINT32_C(0x35b5a8faL), UINT32_C(0x42b2986cL), UINT32_C(0xdbbbc9d6L), UINT32_C(0xacbcf940L), UINT32_C(0x32d86ce3L),
    UINT32_C(0x45df5c75L), UINT32_C(0xdcd60dcfL), UINT32_C(0xabd13d59L), UINT32_C(0x26d930acL), UINT32_C(0x51de003aL),
    UINT32_C(0xc8d75180L), UINT32_C(0xbfd06116L), UINT32_C(0x21b4f4b5L), UINT32_C(0x56b3c423L), UINT32_C(0xcfba9599L),
    UINT32_C(0xb8bda50fL), UINT32_C(0x2802b89eL), UINT32_C(0x5f058808L), UINT32_C(0xc60cd9b2L), UINT32_C(0xb10be924L),
    UINT32_C(0x2f6f7c87L), UINT32_C(0x58684c11L), UINT32_C(0xc1611dabL), UINT32_C(0xb6662d3dL), UINT32_C(0x76dc4190L),
    UINT32_C(0x01db7106L), UINT32_C(0x98d220bcL), UINT32_C(0xefd5102aL), UINT32_C(0x71b18589L), UINT32_C(0x06b6b51fL),
    UINT32_C(0x9fbfe4a5L), UINT32_C(0xe8b8d433L), UINT32_C(0x7807c9a2L), UINT32_C(0x0f00f934L), UINT32_C(0x9609a88eL),
    UINT32_C(0xe10e9818L), UINT32_C(0x7f6a0dbbL), UINT32_C(0x086d3d2dL), UINT32_C(0x91646c97L), UINT32_C(0xe6635c01L),
    UINT32_C(0x6b6b51f4L), UINT32_C(0x1c6c6162L), UINT32_C(0x856530d8L), UINT32_C(0xf262004eL), UINT32_C(0x6c0695edL),
    UINT32_C(0x1b01a57bL), UINT32_C(0x8208f4c1L), UINT32_C(0xf50fc457L), UINT32_C(0x65b0d9c6L), UINT32_C(0x12b7e950L),
    UINT32_C(0x8bbeb8eaL), UINT32_C(0xfcb9887cL), UINT32_C(0x62dd1ddfL), UINT32_C(0x15da2d49L), UINT32_C(0x8cd37cf3L),
    UINT32_C(0xfbd44c65L), UINT32_C(0x4db26158L), UINT32_C(0x3ab551ceL), UINT32_C(0xa3bc0074L), UINT32_C(0xd4bb30e2L),
    UINT32_C(0x4adfa541L), UINT32_C(0x3dd895d7L), UINT32_C(0xa4d1c46dL), UINT32_C(0xd3d6f4fbL), UINT32_C(0x4369e96aL),
    UINT32_C(0x346ed9fcL), UINT32_C(0xad678846L), UINT32_C(0xda60b8d0L), UINT32_C(0x44042d73L), UINT32_C(0x33031de5L),
    UINT32_C(0xaa0a4c5fL), UINT32_C(0xdd0d7cc9L), UINT32_C(0x5005713cL), UINT32_C(0x270241aaL), UINT32_C(0xbe0b1010L),
    UINT32_C(0xc90c2086L), UINT32_C(0x5768b525L), UINT32_C(0x206f85b3L), UINT32_C(0xb966d409L), UINT32_C(0xce61e49fL),
    UINT32_C(0x5edef90eL), UINT32_C(0x29d9c998L), UINT32_C(0xb0d09822L), UINT32_C(0xc7d7a8b4L), UINT32_C(0x59b33d17L),
    UINT32_C(0x2eb40d81L), UINT32_C(0xb7bd5c3bL), UINT32_C(0xc0ba6cadL), UINT32_C(0xedb88320L), UINT32_C(0x9abfb3b6L),
    UINT32_C(0x03b6e20cL), UINT32_C(0x74b1d29aL), UINT32_C(0xead54739L), UINT32_C(0x9dd277afL), UINT32_C(0x04db2615L),
    UINT32_C(0x73dc1683L), UINT32_C(0xe3630b12L), UINT32_C(0x94643b84L), UINT32_C(0x0d6d6a3eL), UINT32_C(0x7a6a5aa8L),
    UINT32_C(0xe40ecf0bL), UINT32_C(0x9309ff9dL), UINT32_C(0x0a00ae27L), UINT32_C(0x7d079eb1L), UINT32_C(0xf00f9344L),
    UINT32_C(0x8708a3d2L), UINT32_C(0x1e01f268L), UINT32_C(0x6906c2feL), UINT32_C(0xf762575dL), UINT32_C(0x806567cbL),
    UINT32_C(0x196c3671L), UINT32_C(0x6e6b06e7L), UINT32_C(0xfed41b76L), UINT32_C(0x89d32be0L), UINT32_C(0x10da7a5aL),
    UINT32_C(0x67dd4accL), UINT32_C(0xf9b9df6fL), UINT32_C(0x8ebeeff9L), UINT32_C(0x17b7be43L), UINT32_C(0x60b08ed5L),
    UINT32_C(0xd6d6a3e8L), UINT32_C(0xa1d1937eL), UINT32_C(0x38d8c2c4L), UINT32_C(0x4fdff252L), UINT32_C(0xd1bb67f1L),
    UINT32_C(0xa6bc5767L), UINT32_C(0x3fb506ddL), UINT32_C(0x48b2364bL), UINT32_C(0xd80d2bdaL), UINT32_C(0xaf0a1b4cL),
    UINT32_C(0x36034af6L), UINT32_C(0x41047a60L), UINT32_C(0xdf60efc3L), UINT32_C(0xa867df55L), UINT32_C(0x316e8eefL),
    UINT32_C(0x4669be79L), UINT32_C(0xcb61b38cL), UINT32_C(0xbc66831aL), UINT32_C(0x256fd2a0L), UINT32_C(0x5268e236L),
    UINT32_C(0xcc0c7795L), UINT32_C(0xbb0b4703L), UINT32_C(0x220216b9L), UINT32_C(0x5505262fL), UINT32_C(0xc5ba3bbeL),
    UINT32_C(0xb2bd0b28L), UINT32_C(0x2bb45a92L), UINT32_C(0x5cb36a04L), UINT32_C(0xc2d7ffa7L), UINT32_C(0xb5d0cf31L),
    UINT32_C(0x2cd99e8bL), UINT32_C(0x5bdeae1dL), UINT32_C(0x9b64c2b0L), UINT32_C(0xec63f226L), UINT32_C(0x756aa39cL),
    UINT32_C(0x026d930aL), UINT32_C(0x9c0906a9L), UINT32_C(0xeb0e363fL), UINT32_C(0x72076785L), UINT32_C(0x05005713L),
    UINT32_C(0x95bf4a82L), UINT32_C(0xe2b87a14L), UINT32_C(0x7bb12baeL), UINT32_C(0x0cb61b38L), UINT32_C(0x92d28e9bL),
    UINT32_C(0xe5d5be0dL), UINT32_C(0x7cdcefb7L), UINT32_C(0x0bdbdf21L), UINT32_C(0x86d3d2d4L), UINT32_C(0xf1d4e242L),
    UINT32_C(0x68ddb3f8L), UINT32_C(0x1fda836eL), UINT32_C(0x81be16cdL), UINT32_C(0xf6b9265bL), UINT32_C(0x6fb077e1L),
    UINT32_C(0x18b74777L), UINT32_C(0x88085ae6L), UINT32_C(0xff0f6a70L), UINT32_C(0x66063bcaL), UINT32_C(0x11010b5cL),
    UINT32_C(0x8f659effL), UINT32_C(0xf862ae69L), UINT32_C(0x616bffd3L), UINT32_C(0x166ccf45L), UINT32_C(0xa00ae278L),
    UINT32_C(0xd70dd2eeL), UINT32_C(0x4e048354L), UINT32_C(0x3903b3c2L), UINT32_C(0xa7672661L), UINT32_C(0xd06016f7L),
    UINT32_C(0x4969474dL), UINT32_C(0x3e6e77dbL), UINT32_C(0xaed16a4aL), UINT32_C(0xd9d65adcL), UINT32_C(0x40df0b66L),
    UINT32_C(0x37d83bf0L), UINT32_C(0xa9bcae53L), UINT32_C(0xdebb9ec5L), UINT32_C(0x47b2cf7fL), UINT32_C(0x30b5ffe9L),
    UINT32_C(0xbdbdf21cL), UINT32_C(0xcabac28aL), UINT32_C(0x53b39330L), UINT32_C(0x24b4a3a6L), UINT32_C(0xbad03605L),
    UINT32_C(0xcdd70693L), UINT32_C(0x54de5729L), UINT32_C(0x23d967bfL), UINT32_C(0xb3667a2eL), UINT32_C(0xc4614ab8L),
    UINT32_C(0x5d681b02L), UINT32_C(0x2a6f2b94L), UINT32_C(0xb40bbe37L), UINT32_C(0xc30c8ea1L), UINT32_C(0x5a05df1bL),
    UINT32_C(0x2d02ef8dL)
};

class ConstexprCrc32 {
    static constexpr uint32_t helper (uint32_t crc, uint8_t byte)
    {
        return ConstexprCrc32__Table[(crc ^ byte) & UINT32_C(0xFF)] ^ (crc >> 8);
    }
    
public:
    using Type = uint32_t;
    
    static constexpr Type hash (Type accum, uint8_t byte)
    {
        return helper(accum ^ UINT32_MAX, byte) ^ UINT32_MAX;
    }
};

#include <aprinter/EndNamespace.h>

#endif
